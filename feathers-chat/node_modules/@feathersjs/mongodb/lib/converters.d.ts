import { ObjectId } from 'mongodb';
export type ObjectIdParam = string | number | ObjectId;
export type IdQueryObject<T> = {
    $in?: T[];
    $nin?: T[];
    $ne?: T;
};
export declare function resolveObjectId(value: ObjectIdParam): Promise<ObjectId>;
export declare function resolveQueryObjectId(value: IdQueryObject<ObjectIdParam>): Promise<IdQueryObject<ObjectId>>;
export declare function resolveQueryObjectId(value: ObjectIdParam): Promise<ObjectId>;
export declare const keywordObjectId: {
    readonly keyword: "objectid";
    readonly type: "string";
    readonly modifying: true;
    readonly compile: (schemaVal: boolean) => (value: string, obj: any) => boolean;
};
