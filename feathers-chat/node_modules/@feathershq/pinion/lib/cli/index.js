"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.cli = exports.convert = void 0;
const path_1 = __importDefault(require("path"));
const yargs_1 = __importDefault(require("yargs"));
const core_1 = require("../core");
const utils_1 = require("../utils");
const convert_1 = require("./convert");
Object.defineProperty(exports, "convert", { enumerable: true, get: function () { return convert_1.convert; } });
const cli = async (cmd) => (0, yargs_1.default)(cmd)
    .scriptName('pinion')
    .usage('$0 <command> [options]')
    .command('convert [file]', 'Convert a file or folder into a generator', (yargs) => yargs
    .positional('file', {
    type: 'string',
    describe: 'The file or folder to convert',
    demandOption: true
})
    .option('to', {
    describe: 'The path or filename to write the generator to',
    default: '.pinion'
}), (argv) => {
    const ctx = (0, core_1.getContext)(argv, {});
    return (0, convert_1.convert)(ctx);
})
    .command('generate', 'Run your local generator', async (yargs) => {
    const moduleName = path_1.default.join(process.cwd(), '.pinion', 'pinion.ts');
    const { command } = await (0, utils_1.loadModule)(moduleName);
    return typeof command === 'function' ? command(yargs) : yargs;
}, async (argv) => {
    const moduleName = path_1.default.join(process.cwd(), '.pinion', 'pinion.ts');
    const { generate } = await (0, utils_1.loadModule)(moduleName);
    const ctx = (0, core_1.getContext)(argv, {});
    return generate(ctx);
})
    .help().argv;
exports.cli = cli;
